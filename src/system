
public class system {
	
	public static void getStationInfo(station station,int n){
		System.out.println("站點名稱");
		System.out.println("可借車輛數");
		System.out.println("空位數");
		System.out.println("站點地址");
		System.out.printf("與該站點相近的%d個站點名稱 距離 可借車輛 空位數",n);
	}
	
	
	public static void getUserInfo(user user){
		System.out.printf("餘額:%d\n",user.getValue());
		if(user.isused){
			System.out.println("借車中");
		}else{
			System.out.println("非借車中");
		}
	}
	
	public static void rentbike(user user,station station){
		if (false){	//UserId沒註冊
			System.out.println("沒註冊");
		}else if(user.getValue()<5){
			System.out.println("餘額不足");
		}else if(user.isused==true){
			System.out.println("正在借車中");
		}else if(false){//沒車
			System.out.println("沒車");
		}else{

			user.setRenttime(System.currentTimeMillis());
			user.isused=true;
			user.setRentstation(station);
			System.out.println("借成功,站點ID,剩餘車輛,剩餘空位");
		}
		
	}
	
	public static void returnbike(user user,station Station){
		if(false){//沒有空位
			System.out.println("沒有空位");
		}else{
			//扣款
			user.setReturntime(System.currentTimeMillis());
			long deltatime=(System.currentTimeMillis()-user.getRenttime())/1000/60;
			if (deltatime<30){//30分鐘內
				user.setValue(user.getValue()-5);
			}else if (deltatime<240){//4小時內
				if (deltatime%30==0){
					user.setValue((int)(user.getValue()-10*deltatime/30));
				}else{
					user.setValue((int)(user.getValue()-10*(deltatime/30+1)));
				}
			}else if (deltatime<480){//8小時內
				if (deltatime%30==0){
					user.setValue((int)(user.getValue()-20*deltatime/30));
				}else{
					user.setValue((int)(user.getValue()-20*(deltatime/30+1)));
				}			
			}else{//逾8小時
				if (deltatime%30==0){
					user.setValue((int)(user.getValue()-40*deltatime/30));
				}else{
					user.setValue((int)(user.getValue()-40*(deltatime/30+1)));				
				}
			}
			user.isused=false;
			System.out.println("還成功,扣款金額,悠遊卡餘額");			
		}
	
	}	
	
	//算出最近的站點
	public static station findNearest(station Station){
		
		return null;
	}

	//輸入使用者座標位置列出最近站點依序排列
	public static station findNearest(double x,double y){
		
		return null;
	}	
	
	//列出最多空位數的站點依序排列
	public static void orderBySpace(){
		
	}
	
	//列出最多車輛數的站點依序排列
	public static void orderByBike(){
		
	}
		
	public static void getUsedUser(){
		
	}
	
	public static void getUnusedUser(){
		
	}
	
	public static void getTimeTop10User(){
		
	}
	
	public static void getTimesTop10User(){
		
	}
	
	public static void main(String[] args) {

	}


}
